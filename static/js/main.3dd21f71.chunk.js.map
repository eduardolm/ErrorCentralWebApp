{"version":3,"sources":["pages/Landing/index.tsx","components/NavBar/index.tsx","components/PageHeader/index.tsx","components/Input/index.tsx","services/api.ts","components/PageFooter/index.tsx","pages/Login/index.tsx","pages/UserDelete/index.tsx","pages/UserCreate/index.tsx","pages/UserUpdate/index.tsx","components/UserItem/index.tsx","pages/UserList/index.tsx","pages/UserRegistry/index.tsx","pages/InnerMain/index.tsx","components/TextArea/index.tsx","components/Select/index.tsx","pages/LogCreate/index.tsx","components/LogItem/index.tsx","pages/LogList/index.tsx","pages/LogDelete/index.tsx","pages/LogUpdate/index.tsx","routes.tsx","App.tsx","index.tsx","assets/images/logo.png","assets/images/logo-small.png"],"names":["Landing","history","useHistory","id","className","src","logoImg","alt","Button","size","variant","color","onClick","push","startIcon","useStyles","makeStyles","theme","createStyles","list","width","fullList","root","margin","spacing","TemporaryDrawer","props","useCookies","removeCookie","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","handleLogout","map","Fragment","style","fontSize","Drawer","onClose","menuType","clsx","role","onKeyDown","List","component","ListItem","ListItemIcon","ListItemText","primary","Divider","userListMenu","logListMenu","PageHeader","IconButton","aria-label","title","description","children","menu","Input","label","name","rest","htmlFor","api","axios","create","baseURL","PageFooter","Login","setCookies","email","setEmail","password","setPassword","e","a","preventDefault","post","response","data","access_token","path","maxAge","value","onChange","target","UserDelete","cookies","token","setId","handleDeleteUser","alert","delete","headers","authorization","status","statusCode","onSubmit","UserCreate","fullName","setFullName","handleCreateUser","UserUpdate","Date","createdAt","setCreatedAt","handleUpdateUser","get","put","UserItem","user","UserList","users","setUsers","handleListAllUsers","handleListUserById","console","log","Object","prototype","toString","call","currUser","concat","UserRegistry","then","catch","InnerMain","Textarea","Select","options","disabled","hidden","option","LogCreate","setName","setDescription","userId","setUserId","environmentId","setEnvironmentId","layerId","setLayerId","levelId","setLevelId","statusId","setStatusId","handleCreateLog","LogItem","environment","layer","level","LogList","logs","setLogs","orderId","setOrderId","searchId","setSearchId","sortResults","convertToArray","bobo","sorter","sortBy","require","counter","forEach","word","sort","x","y","orderByFrequency","handleSearchTypeSelect","LogDelete","handleDeleteLog","LogUpdate","handleUpdateLog","dateResponse","Routes","exact","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3dd21f71.chunk.js","sourcesContent":["import React from \"react\";\nimport logoImg from '../../assets/images/logo.png';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from 'react-router-dom';\n\nimport './styles.css';\n\nfunction Landing() {\n    const history = useHistory();\n\n    return (\n        <div id=\"landing-page\">\n            <div id=\"landing-page-content\" className=\"container\">\n                <div className=\"logo-container\">\n                    <img src={logoImg} alt=\"Central de Erros\" />\n                </div>\n                <div className=\"buttons-container\">\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {history.push('/user/login')}}\n                        startIcon={<ExitToAppOutlinedIcon />}\n                    >\n                        Login\n                    </Button>\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        onClick={() => {history.push('/user/registry')}}\n                        startIcon={<CreateOutlinedIcon />}\n                    >\n                        Cadastrar\n                    </Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Landing;","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useCookies} from 'react-cookie';\n\nimport clsx from 'clsx';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListOutlinedIcon from '@material-ui/icons/ListOutlined';\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\nimport UpdateOutlinedIcon from '@material-ui/icons/UpdateOutlined';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MeetingRoomOutlinedIcon from '@material-ui/icons/MeetingRoomOutlined';\nimport PostAddOutlinedIcon from '@material-ui/icons/PostAddOutlined';\nimport {Divider} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    }\n}));\n\ntype Anchor =  'top' //| 'left' | 'bottom' | 'right';\n\n\ninterface TemporaryDrawerProps {\n    menuType: string;\n}\n\nconst TemporaryDrawer: React.FC<TemporaryDrawerProps> = (props) => {\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const history = useHistory();\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\n        event: React.KeyboardEvent | React.MouseEvent,\n    ) => {\n        if (\n            event.type === 'keydown' &&\n            ((event as React.KeyboardEvent).key === 'Tab' ||\n                (event as React.KeyboardEvent).key === 'Shift')\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const handleLogout = () => {\n        removeCookie('token');\n        history.push('/user/login');\n    }\n\n    const userListMenu = (anchor: Anchor) => (\n        <div\n            className={clsx(classes.fullList, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List component=\"nav\">\n                    <ListItem>\n                        <Button onClick={() => {history.push('/user/list')}}>\n                            <ListItemIcon> <ListOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                            <ListItemText primary=\"Listar\" />\n                        </Button>\n                    </ListItem>\n                    <ListItem>\n                        <Button onClick={() => {history.push('/user/create')}}>\n                            <ListItemIcon> <PersonAddOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                            <ListItemText primary=\"Cadastrar\" />\n                        </Button>\n                    </ListItem>\n                    <ListItem>\n                        <Button onClick={() => {history.push('/user/update')}}>\n                            <ListItemIcon> <UpdateOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                            <ListItemText primary=\"Alterar\" />\n                        </Button>\n                    </ListItem>\n                    <ListItem>\n                        <Button onClick={() => {history.push('/user/delete')}}>\n                            <ListItemIcon> <DeleteOutlineOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                            <ListItemText primary=\"Excluir\" />\n                        </Button>\n                    </ListItem>\n                <Divider />\n                <ListItem>\n                    <Button onClick={() => {handleLogout()}}>\n                        <ListItemIcon> <MeetingRoomOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                        <ListItemText primary=\"Logout\" />\n                    </Button>\n                </ListItem>\n            </List>\n        </div>\n    );\n\n    const logListMenu = (anchor: Anchor) => (\n        <div\n            className={clsx(classes.fullList, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List component=\"nav\">\n                <ListItem>\n                    <Button onClick={() => {history.push('/log/list')}}>\n                        <ListItemIcon> <ListOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                        <ListItemText primary=\"Listar\" />\n                    </Button>\n                </ListItem>\n                <ListItem>\n                    <Button onClick={() => {history.push('/log/create')}}>\n                        <ListItemIcon> <PostAddOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                        <ListItemText primary=\"Cadastrar\" />\n                    </Button>\n                </ListItem>\n                <ListItem>\n                    <Button onClick={() => {history.push('/log/update')}}>\n                        <ListItemIcon> <UpdateOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                        <ListItemText primary=\"Alterar\" />\n                    </Button>\n                </ListItem>\n                <ListItem>\n                    <Button onClick={() => {history.push('/log/delete')}}>\n                        <ListItemIcon> <DeleteOutlineOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                        <ListItemText primary=\"Excluir\" />\n                    </Button>\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <Button onClick={() => {handleLogout()}}>\n                        <ListItemIcon> <MeetingRoomOutlinedIcon fontSize=\"large\"/> </ListItemIcon>\n                        <ListItemText primary=\"Logout\" />\n                    </Button>\n                </ListItem>\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            {(['top'] as Anchor[]).map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <div\n                        onClick={toggleDrawer(anchor, true)}\n                    >\n                        <ExpandMoreIcon\n                            style={{fontSize: 40, color: '#9C98A6'}}\n                        />\n                    </div>\n                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                        {(props.menuType === 'user') ? userListMenu(anchor) : logListMenu(anchor)}\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\nexport default TemporaryDrawer;","import React from \"react\";\n\nimport logoImg from '../../assets/images/logo-small.png';\n\nimport './styles.css';\nimport {IconButton} from \"@material-ui/core\";\nimport TemporaryDrawer from \"../NavBar\";\nimport ArrowBackIosOutlinedIcon from '@material-ui/icons/ArrowBackIosOutlined';\nimport {useHistory} from 'react-router-dom';\n\n\ninterface PageHeaderProps {\n    title: string;\n    description?: string;\n    menu: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = (props) => {\n    const history = useHistory();\n    return (\n        <header className=\"page-header\">\n            <div className=\"top-bar-container\">\n                <IconButton\n                    aria-label=\"Back\"\n                    size=\"medium\"\n                    style={{color: '#9C98A6'}}\n                    onClick={() => history.push('/main')}\n                >\n                    <ArrowBackIosOutlinedIcon />\n                </IconButton>\n                <img src={logoImg} alt=\"Central de Erros\" className=\"logout-icon\"/>\n            </div>\n            <div className=\"header-content\">\n                <strong>\n                    {props.title}\n                </strong>\n                {props.description && <p>{props.description}</p>}\n                {props.children}\n            </div>\n            <div className=\"header-menu-container\">\n                <div\n                    className=\"header-button-nav\"\n                >\n                    <TemporaryDrawer\n                        menuType={props.menu}\n                    />\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default PageHeader;","import React, {InputHTMLAttributes} from \"react\";\n\nimport './styles.css';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\n    name: string;\n    label: string;\n}\n\nconst Input: React.FC<InputProps> = ({label, name, ...rest}) => {\n    return (\n        <div className=\"input-block\">\n            <label htmlFor={name}>{label}</label>\n            <input type=\"text\" id={name} {...rest} />\n        </div>\n    );\n}\n\nexport default Input;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://errorcentralv102.azurewebsites.net'\n})\n\nexport default api;","import React from 'react';\nimport './styles.css';\n\nfunction PageFooter() {\n    return (\n        <footer className=\"page-footer\"/>\n    )\n}\n\nexport default PageFooter;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from 'react-router-dom';\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './styles.css';\nimport PageFooter from \"../../components/PageFooter\";\n\nfunction Login() {\n    const history = useHistory();\n    const [cookies, setCookies] = useCookies();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    async function handleLoginUser(e: FormEvent) {\n        e.preventDefault();\n\n        const response = await api.post('/user/login', {\n            email,\n            password\n        });\n\n        if (response.data.access_token) {\n            setCookies('token', response.data, {\n                path: '/',\n                maxAge: 3600\n            });\n\n            history.push('/main');\n        }\n    }\n\n    return (\n        <div id=\"login-page\" className=\"container\">\n            <PageHeader\n                title=\"Login\"\n                description=\"Faça seu login utilizando o formulário abaixo.\"\n                menu={'user'}\n            />\n            <main>\n                <form>\n                    <fieldset>\n                        <legend>\n                            Seus dados\n                        </legend>\n                        <Input\n                            name=\"email\"\n                            label=\"E-mail\"\n                            value={email}\n                            onChange={(e) => {setEmail(e.target.value)}}\n                        />\n                        <Input\n                            name=\"password\"\n                            label=\"Senha\"\n                            value={password}\n                            onChange={(e) => {setPassword(e.target.value)}}\n                        />\n                    </fieldset>\n                    <footer>\n                        <p>\n                            <ReportProblemOutlinedIcon style={{fontSize: 30, color: '#D71414', margin: 10}}/>\n                            Importante! <br />\n                            Preencha todos os dados\n                        </p>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleLoginUser}\n                        >\n                            Login\n                        </Button>\n                    </footer>\n                </form>\n            </main>\n            <PageFooter />\n        </div>\n    )\n}\n\nexport default Login;","import React, {FormEvent, useState} from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\nimport {useCookies} from 'react-cookie';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport {useHistory} from 'react-router-dom';\n\nimport './styles.css';\nimport Button from \"@material-ui/core/Button\";\nimport PageFooter from \"../../components/PageFooter\";\n\nfunction UserDelete() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [id, setId] = useState('');\n\n    async function handleDeleteUser(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.delete('user/' + id, {\n                headers: {\n                    authorization: token\n                }\n            }\n            );\n\n            if (response.status === 200) {\n                alert('Registro excluído com sucesso!');\n            }\n            if (response.status === 204) {\n                alert('Registro não encontrado.');\n                return [];\n            }\n\n        } catch (e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if (e.statusCode === 500) {\n                alert('Erro do servidor. Tente novamente em alguns minutos. Se o erro se repetir, entre em contato com o administrador do sistema');\n            } else {\n                history.push('/user/delete');\n                alert('Erro ao realizar sua solicitação.')\n            }\n        }\n\n    }\n    return (\n        <div id=\"user-page\" className=\"container\">\n            <PageHeader\n                title=\"Excluir usuário\"\n                description=\"Aqui é possível excluir usuários.\"\n                menu={'user'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleDeleteUser} className=\"user-delete\">\n                    <fieldset>\n                        <legend>\n                            Exclusão\n                        </legend>\n                        <div className=\"user-delete-action\">\n                            <Input className=\"user-delete-input\" name=\"id\" label=\"Id do usuário a ser excluído\"\n                                   value={id}\n                                   onChange={(e) => {setId(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"delete\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleDeleteUser}\n                                startIcon={<DeleteOutlineOutlinedIcon />}\n                            >\n                                Excluir\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <PageFooter />\n        </div>\n\n    )\n}\n\nexport default UserDelete;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\nimport Button from '@material-ui/core/Button';\n\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\n\nimport './styles.css';\nimport SaveAltOutlinedIcon from \"@material-ui/icons/SaveAltOutlined\";\nimport {useHistory} from \"react-router-dom\";\nimport PageFooter from \"../../components/PageFooter\";\n\nfunction UserCreate() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [fullName, setFullName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    async function handleCreateUser(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.post('user/create', {fullName, email, password}, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 200) {\n                alert('Cadastro realizado com sucesso!');\n            }\n\n        } catch(e) {\n            if (e.status === 400) {\n                alert('Verifique os dados digitados. Caso estejam corretos, já existe este registro em nosso banco de dados.');\n            }\n            if (e.status === 401) {\n                history.push(('/user/login'));\n                alert('Sessão expirada! Favor fazer o login para prosseguir.');\n            }\n            if (e.status >= 500) {\n                alert('Ocorreu um erro interno. Favor tentar novamente dentro de alguns minutos.');\n            }\n        }\n    }\n\n    return (\n        <div id=\"user-page\" className=\"container\">\n            <PageHeader\n                title=\"Cadastrar usuáro\"\n                description=\"Aqui é possível cadastrar novos usuários.\"\n                menu={'user'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleCreateUser} className=\"user-create\">\n                    <fieldset>\n                        <legend>\n                            Cadastro\n                        </legend>\n                        <Input className=\"create-name\" name=\"fullName\" label=\"Nome completo\"\n                               value={fullName}\n                               onChange={(e) => {setFullName(e.target.value)}}\n                        />\n                        <Input className=\"create-email\" name=\"email\" label=\"E-mail\"\n                               value={email}\n                               onChange={(e) => {setEmail(e.target.value)}}\n                        />\n                        <div className=\"user-create-action\">\n                            <Input className=\"create-password\" name=\"password\" label=\"Senha\"\n                                   value={password}\n                                   onChange={(e) => {setPassword(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"create\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleCreateUser}\n                                startIcon={<SaveAltOutlinedIcon />}\n                            >\n                                Gravar\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <PageFooter />\n        </div>\n\n    )\n}\n\nexport default UserCreate;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\nimport {useHistory} from 'react-router-dom';\n\nimport './styles.css';\nimport api from \"../../services/api\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport SaveAltOutlinedIcon from \"@material-ui/icons/SaveAltOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport PageFooter from \"../../components/PageFooter\";\n\nfunction UserUpdate() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [id, setId] = useState('');\n    const [fullName, setFullName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [createdAt, setCreatedAt] = useState(new Date());\n\n    async function handleUpdateUser(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.get('user/' + id, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 200){\n                alert('Registro alterado com sucesso!');\n            }\n\n            if (response.status === 204) {\n                alert('Registro não encontrado.');\n                return[];\n            }\n            setCreatedAt(response.data.createdAt);\n\n            await api.put('user', {id, fullName, email, password, createdAt}, {\n                headers: {\n                    authorization: token\n                }\n            })\n        } catch (e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if (e.statusCode === 400) {\n                alert('Erro ao atualizar o usuário. Confira os dados informados.');\n            } else if (e.statusCode === 500) {\n                alert('Erro do servidor. Tente novamente em alguns minutos. Se o erro se repetir, entre em contato com o administrador do sistema');\n            } else {\n                history.push('/user/update');\n                alert('Erro ao realizar sua solicitação.')\n            }\n        }\n    }\n\n    return (\n        <div id=\"user-page\" className=\"container\">\n            <PageHeader\n                title=\"Alterar usuário\"\n                description=\"Aqui é possível alterar os cadastros dos usuários.\"\n                menu={'user'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleUpdateUser} className=\"user-update\">\n                    <fieldset>\n                        <legend>\n                            Alteração\n                        </legend>\n                        <Input className=\"update-id\" name=\"id\" label=\"Id do usuário a ser alterado\"\n                               value={id}\n                               onChange={(e) => {setId(e.target.value)}}\n                        />\n                        <Input className=\"update-name\" name=\"fullName\" label=\"Nome completo\"\n                               value={fullName}\n                               onChange={(e) => {setFullName(e.target.value)}}\n                        />\n                        <Input className=\"update-email\" name=\"email\" label=\"E-mail\"\n                               value={email}\n                               onChange={(e) => {setEmail(e.target.value)}}\n                        />\n                        <div className=\"user-update-action\">\n                            <Input className=\"update-password\" name=\"password\" label=\"Senha\"\n                                   value={password}\n                                   onChange={(e) => {setPassword(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"update\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleUpdateUser}\n                                startIcon={<SaveAltOutlinedIcon />}\n                            >\n                                Gravar\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <PageFooter />\n        </div>\n    )\n}\n\nexport default UserUpdate;","import React from \"react\";\n\nimport './styles.css';\n\nexport interface User {\n    id: number,\n    fullName: string,\n    email: string,\n    createdAt: Date\n}\n\ninterface UserItemProps {\n    user: User;\n}\n\nconst UserItem: React.FC<UserItemProps> = ({user}) => {\n    return (\n        <article className=\"user-item\">\n            <div>\n                <ul className=\"user-item-list\">\n                    <li>\n                        <strong>\n                            Id: {'  '}{user.id}\n                        </strong>\n                    </li>\n                    <li>\n                        Nome: {'  '}{user.fullName}\n                    </li>\n                    <li>\n                        E-mail: {'  '}{user.email}\n                    </li>\n                    <li>\n                        Cadastro: {'  '}{user.createdAt}\n                    </li>\n                </ul>\n            </div>\n        </article>\n    );\n}\n\nexport default UserItem;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\n\nimport './styles.css'\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport UserItem, {User} from \"../../components/UserItem\";\nimport {useHistory} from 'react-router-dom';\nimport api from \"../../services/api\";\nimport Button from '@material-ui/core/Button';\nimport ListOutlinedIcon from '@material-ui/icons/ListOutlined';\nimport BrandingWatermarkOutlinedIcon from '@material-ui/icons/BrandingWatermarkOutlined';\nimport PageFooter from \"../../components/PageFooter\";\n\nfunction UserList(this: any) {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [users, setUsers] = useState([]);\n    const [id, setId] = useState('');\n\n    async function handleListAllUsers(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.get('user', {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 204) {\n                alert('Nenhum registro encontrado.')\n                return [];\n            }\n            setUsers(response.data);\n        } catch (e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if (e) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            }\n        }\n    }\n\n    async function handleListUserById(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.get(`/user/${id}`, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 204) {\n                alert('Registro não encontrado.');\n                return [];\n            }\n            console.log(response.status);\n\n            if (Object.prototype.toString.call( response.data ) !== '[object Array]') {\n                let currUser = [].concat(response.data);\n                setUsers(currUser);\n            }\n\n        } catch (e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            }\n        }\n    }\n\n    return (\n        <div id=\"user-page\" className=\"container\">\n            <PageHeader\n                title=\"Listar usuários\"\n                description=\"Aqui é possível listar os usuários cadastrados.\"\n                menu={'user'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleListAllUsers} className=\"user-list\">\n                    <fieldset>\n                        <legend>\n                            Listagem\n                        </legend>\n                        <div className=\"list-all\">\n                            <Button\n                                type=\"submit\"\n                                className=\"list-all\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleListAllUsers}\n                                startIcon={<ListOutlinedIcon />}\n                            >\n                                Listar Todos\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n                <form onSubmit={handleListUserById} className=\"user-list-id\">\n                    <fieldset>\n                        <div className=\"list-id\">\n                            <Input\n                                name=\"id\"\n                                label=\"Informe o id do usuário\"\n                                value={id}\n                                onChange={(e) => {setId(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"list-by-id\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleListUserById}\n                                startIcon={<BrandingWatermarkOutlinedIcon />}\n                            >\n                                Listar por Id\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <main>\n                <div id=\"list-users-response\">\n                    {\n                        users.map((user: User) => {\n                        return <UserItem key={user.id} user={user}/>;\n                    })}\n                </div>\n            </main>\n            <PageFooter />\n        </div>\n    )\n}\n\nexport default UserList;\n","import React, {FormEvent, useState} from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\nimport Button from '@material-ui/core/Button';\nimport SaveAltOutlinedIcon from '@material-ui/icons/SaveAltOutlined';\n\n\nfunction UserRegistry() {\n    const history = useHistory();\n    const [fullName, setFullName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    async function handleCreateUser(e: FormEvent) {\n        e.preventDefault();\n\n        await api.post('user/registry', {fullName, email, password}\n        ).then(() => {\n            alert('Cadastro realizado com sucesso!');\n            history.push('/user/login')\n        }).catch(() => {\n            alert('Erro no cadastro.');\n        });\n    }\n\n    return (\n        <div id=\"user-page\" className=\"container\">\n            <PageHeader\n                title=\"Novo cadastro\"\n                description=\"Bem-vindo! Faça seu cadastro para começar a utilizar o sistema.\"\n                menu={'user'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleCreateUser} className=\"user-create\">\n                    <fieldset>\n                        <legend>\n                            Cadastro\n                        </legend>\n                        <Input className=\"create-name\" name=\"fullName\" label=\"Nome completo\"\n                               value={fullName}\n                               onChange={(e) => {setFullName(e.target.value)}}\n                        />\n                        <Input className=\"create-email\" name=\"email\" label=\"E-mail\"\n                               value={email}\n                               onChange={(e) => {setEmail(e.target.value)}}\n                        />\n                        <div className=\"user-create-action\">\n                            <Input className=\"create-password\" name=\"password\" label=\"Senha\"\n                                   value={password}\n                                   onChange={(e) => {setPassword(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"create\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleCreateUser}\n                                startIcon={<SaveAltOutlinedIcon />}\n                            >\n                                Gravar\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\nexport default UserRegistry;","import React from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {useCookies} from 'react-cookie';\nimport {useHistory} from 'react-router-dom';\nimport {Button} from \"@material-ui/core\";\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\n\nimport './styles.css';\n\nfunction InnerMain() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n\n    if (!cookies['token']) {\n        history.push('/user/login');\n        alert('Sessão expirada! Favor fazer o login para prosseguir.')\n    }\n\n    function handleGoToUser() {\n        history.push('/user/list')\n    }\n\n    function handleGoToLog() {\n        history.push('/log/list')\n    }\n\n    return (\n        <div id=\"main-page\" className=\"container\">\n            <PageHeader\n                title=\"Bem-vindos!\"\n                description=\"Esta é a página principal da aplicação. Nela é possível escolher qual o tipo de informação desejado.\"\n                menu={'user'}\n            />\n            <main className=\"main-work-area-container\">\n                    <div className=\"text-container\">\n                        <p>\n                            Clique em \"usuários\" para acessar o conteúdo relacionado aos usuários, ou \"logs\" para ter acesso aos logs de erros.\n                        </p>\n                    </div>\n                    <div className=\"main-page-buttons-container\">\n                        <Button\n                            className=\"user-button\"\n                            size=\"large\"\n                            variant=\"contained\"\n                            style={{width: 120}}\n                            color=\"primary\"\n                            startIcon={<PersonOutlineOutlinedIcon/>}\n                            onClick={handleGoToUser}\n                        >\n                            Usuários\n                        </Button>\n                        <Button\n                            className=\"log-button\"\n                            size=\"large\"\n                            variant=\"contained\"\n                            style={{width: 120}}\n                            startIcon={<ListAltOutlinedIcon/>}\n                            onClick={handleGoToLog}\n                        >\n                            Logs\n                        </Button>\n                    </div>\n            </main>\n            <footer className=\"main-footer\">\n            </footer>\n        </div>\n    );\n}\n\nexport default InnerMain;","import React, {TextareaHTMLAttributes} from \"react\";\n\nimport './styles.css';\n\ninterface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement>{\n    name: string;\n    label: string;\n}\n\nconst Textarea: React.FC<TextareaProps> = ({label, name, ...rest}) => {\n    return (\n        <div className=\"textarea-block\">\n            <label htmlFor={name}>{label}</label>\n            <textarea id={name} {...rest} />\n        </div>\n    );\n}\n\nexport default Textarea;","import React, {SelectHTMLAttributes} from \"react\";\n\nimport './styles.css';\n\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement>{\n    name: string;\n    label: string;\n    options: Array<{\n        value: number,\n        label: string\n    }>;\n}\n\nconst Select: React.FC<SelectProps> = ({label, name, options, ...rest}) => {\n    return (\n        <div className=\"select-block\">\n            <label htmlFor={name}>{label}</label>\n            <select value=\"\" id={name} {...rest}>\n                <option value=\"\" disabled hidden>Selecione</option>\n                {options.map(option => {\n                    return <option key={option.value} value={option.value}>{option.label}</option>\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport default Select;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\nimport Button from '@material-ui/core/Button';\n\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\n\nimport './styles.css';\nimport SaveAltOutlinedIcon from \"@material-ui/icons/SaveAltOutlined\";\nimport {useHistory} from \"react-router-dom\";\nimport PageFooter from \"../../components/PageFooter\";\nimport Textarea from \"../../components/TextArea\";\nimport Select from '../../components/Select';\n\n\nfunction LogCreate() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [userId, setUserId] = useState('');\n    const [environmentId, setEnvironmentId] = useState('');\n    const [layerId, setLayerId] = useState('');\n    const [levelId, setLevelId] = useState('');\n    const [statusId, setStatusId] = useState('');\n\n\n    async function handleCreateLog(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.post('log/create', {name, description, userId, environmentId, layerId, levelId, statusId}, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 200) {\n                alert('Cadastro realizado com sucesso!');\n            }\n\n        } catch(e) {\n            if (e.status === 400) {\n                alert('Verifique os dados digitados. Caso estejam corretos, já existe este registro em nosso banco de dados.');\n            }\n            if (e.status === 401) {\n                history.push(('/user/login'));\n                alert('Sessão expirada! Favor fazer o login para prosseguir.');\n            }\n            if (e.status >= 500) {\n                alert('Ocorreu um erro interno. Favor tentar novamente dentro de alguns minutos.');\n            }\n        }\n    }\n\n    return (\n        <div id=\"log-page\" className=\"container\">\n            <PageHeader\n                title=\"Cadastrar log\"\n                description=\"Aqui é possível cadastrar novos logs de erros.\"\n                menu={'log'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleCreateLog} className=\"log-create\">\n                    <fieldset>\n                        <legend>\n                            Cadastro\n                        </legend>\n                        <Input className=\"create-name\" name=\"name\" label=\"Título\"\n                               value={name}\n                               onChange={(e) => {setName(e.target.value)}}\n                        />\n                        <Textarea\n                            name=\"description\"\n                            label=\"Descrição\"\n                            value={description}\n                            onChange={(e) => {setDescription(e.target.value)}}\n                        />\n                        <div className=\"grid-container-1-create\">\n                            <Input className=\"create-user-id\" name=\"userId\" label=\"User Id\"\n                                   value={userId}\n                                   onChange={(e) => {setUserId(e.target.value)}}\n                            />\n                            <Select\n                                name=\"environment\"\n                                label=\"Ambiente\"\n                                value={environmentId}\n                                onChange={(e) => {setEnvironmentId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Desenvolvimento'},\n                                    {value: 2, label: 'Homologação'},\n                                    {value: 3, label: 'Produção'}\n                                ]}\n                            />\n                            <Select\n                                name=\"layer\"\n                                label=\"Camada\"\n                                value={layerId}\n                                onChange={(e) => {setLayerId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Backend'},\n                                    {value: 2, label: 'Frontend'},\n                                    {value: 3, label: 'Mobile'},\n                                    {value: 4, label: 'Desktop'}\n                                ]}\n                            />\n                        </div>\n                        <div className=\"grid-container-2-create\">\n                            <Select\n                                name=\"level\"\n                                label=\"Level\"\n                                value={levelId}\n                                onChange={(e) => {setLevelId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Debug'},\n                                    {value: 2, label: 'Warning'},\n                                    {value: 3, label: 'Error'}\n                                ]}\n                            />\n                            <Select\n                                name=\"status\"\n                                label=\"Status\"\n                                value={statusId}\n                                onChange={(e) => {setStatusId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Arquivado'},\n                                    {value: 2, label: 'Pendente'},\n                                    {value: 3, label: 'Ignorado'}\n                                ]}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"create-log-button\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleCreateLog}\n                                startIcon={<SaveAltOutlinedIcon />}\n                            >\n                                Gravar\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <PageFooter />\n        </div>\n\n    )\n}\n\nexport default LogCreate;","import React from \"react\";\n\nimport './styles.css';\n\nexport interface Log {\n    id: number,\n    name: string,\n    description: string,\n    user: {\n        id: number\n        fullName: string,\n        email: string,\n        createdAt: string,\n    },\n    environment: {\n        id: number,\n        name: string\n    },\n    layer: {\n        id: number,\n        name: string\n    },\n    level: {\n        id: number,\n        name: string\n    },\n    status: {\n        id: number,\n        name: string\n    }\n    createdAt: Date\n}\n\ninterface LogItemProps {\n    log: Log;\n}\n\nconst LogItem: React.FC<LogItemProps> = (props) => {\n    return (\n        <article className=\"log-item\">\n            <header className=\"log-item-header\">\n                <h2>\n                    Título: {'  '}{props.log.name}\n                </h2>\n            </header>\n            <div>\n                <ul className=\"log-item-list\">\n                    <li>\n                        <strong>\n                            Id: {'  '}{props.log.id}\n                        </strong>\n                    </li>\n                    <li>\n                        Descrição: {'  '}{props.log.description}\n                    </li>\n                    <li>\n                        Usuário: {'  '}{props.log.user.fullName}\n                    </li>\n                    <li>\n                        Ambiente: {'  '}{props.log.environment.name}\n                    </li>\n                    <li>\n                        Origem: {'  '}{props.log.layer.name}\n                    </li>\n                    <li>\n                        Level: {'  '}{props.log.level.name}\n                    </li>\n                    <li>\n                        Status: {'  '}{props.log.status.name }\n                    </li>\n                    <li>\n                        Cadastro: {'  '}{props.log.createdAt}\n                    </li>\n                </ul>\n            </div>\n        </article>\n    );\n}\n\nexport default LogItem;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\n\nimport './styles.css'\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport LogItem, {Log} from \"../../components/LogItem\";\nimport {useHistory} from 'react-router-dom';\nimport api from \"../../services/api\";\nimport Button from '@material-ui/core/Button';\nimport ListOutlinedIcon from '@material-ui/icons/ListOutlined';\nimport BrandingWatermarkOutlinedIcon from '@material-ui/icons/BrandingWatermarkOutlined';\nimport PageFooter from \"../../components/PageFooter\";\nimport Select from \"../../components/Select\";\n\nfunction LogList(this: any) {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [logs, setLogs] = useState([]);\n    const [id, setId] = useState('');\n    const [environmentId, setEnvironmentId] = useState('');\n    const [levelId, setLevelId] = useState('');\n    const [layerId, setLayerId] = useState('');\n    const [orderId, setOrderId] = useState('');\n    const [searchId, setSearchId] = useState('');\n    const [description, setDescription] = useState('');\n\n    async function handleListAllLogs(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.get('log', {\n                headers: {\n                    authorization: token\n                }\n            });\n            setLogs(response.data);\n\n            if (response.status === 204) {\n                alert('Nenhum registro encontrado.')\n                return [];\n            }\n\n        } catch (e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if (e) {\n                history.push('/user/login');\n                alert('Ocorre um erro ao processar sua solicitação. Favor tentar novamente dentro de alguns minutos.');\n            }\n        }\n    }\n\n    async function handleListLogById(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n            const response = await api.get(`/log/${id}`, {\n                headers: {\n                    authorization: token\n                }\n\n            });\n\n            if (response.status === 204) {\n                alert('Nenhum registro encontrado.')\n                return [];\n            }\n\n            if (Object.prototype.toString.call( response.data ) !== '[object Array]') {\n                setLogs([].concat(response.data));\n            }\n\n        } catch (e) {\n\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if ( e.statusCode === 404) {\n                alert('Nenhum registro encontrado.')\n                return [];\n            }else {\n                alert('Ocorreu um erro ao processar sua solicitação. Favor tentar novamente dentro de alguns minutos.');\n            }\n\n        }\n    }\n\n    async function handleAdvancedSearch(e: FormEvent) {\n        e.preventDefault();\n\n        try {\n            if (!cookies['token']) {\n                history.push('/user/login');\n                alert('Sessão expirada! Favor fazer o login para prosseguir.')\n            }\n\n            if (searchId === '1') {\n                const response = await api.get(`/log/environment/${environmentId}/level/${levelId}`, {\n                    headers: {\n                        authorization: token\n                    }\n                });\n\n                if (response.status === 204) {\n                    alert('Nenhum registro encontrado.')\n                    return [];\n                }\n\n                if (Object.prototype.toString.call(response.data) !== '[object Array]') {\n                    setLogs([].concat(response.data));\n                } else {\n                    setLogs(response.data);\n                }\n\n            } else if (searchId === '2') {\n                const response = await api.get(`/log/environment?environmentId=${environmentId}&description=${description}`, {\n                    headers: {\n                        authorization: token\n                    }\n                });\n\n                if (response.status === 204) {\n                    alert('Nenhum registro encontrado.')\n                    return [];\n                }\n\n                if (orderId === '1') {\n                    setLogs(sortResults(convertToArray(response.data), 'level.id'));\n                } else if (orderId === '2') {\n                    setLogs(sortResults(convertToArray(response.data), 'frequency'));\n                }\n\n            } else if (searchId === '3') {\n\n                const response = await api.get(`/log/environment/${environmentId}/layer/${layerId}`, {\n                    headers: {\n                        authorization: token\n                    }\n                });\n                if (response.status === 204) {\n                    alert('Nenhum registro encontrado.')\n                    return [];\n                }\n\n                const bobo = convertToArray(response.data);\n                console.log(sortResults(bobo, 'frequency'));\n\n                if (orderId === '1') {\n                    setLogs(sortResults(convertToArray(response.data), 'level.id'));\n                } else if (orderId === '2') {\n                    setLogs(sortResults(convertToArray(response.data), 'frequency'));\n                }\n            }\n\n\n        } catch (e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else {\n                history.push('/log/list');\n                alert('Ocorreu um erro ao processar sua solicitação. Favor tentar novamente dentro de alguns minutos.');\n            }\n        }\n    }\n\n    function sortResults(data: Log[], sorter: string) {\n\n        const sortBy = require('lodash.sortby');\n\n        if (orderId === '1') {\n            return sortBy(data, sorter);\n        }\n\n        if (orderId === '2') {\n            return orderByFrequency(data);\n        }\n    }\n\n    function orderByFrequency(data: Log[]){\n        let counter = Object.create(null);\n        data.forEach(function(word) {\n            counter[word.level.id] = (counter[word.level.id] || 0) + 1;\n        });\n\n        data.sort(function(x, y) {\n            return counter[y.level.id] - counter[x.level.id];\n        });\n        return data;\n    }\n\n    function convertToArray(data: any) {\n        if (Object.prototype.toString.call(data) !== '[object Array]') {\n            return [].concat(data);\n        } else {\n            return data;\n        }\n    }\n\n    function handleSearchTypeSelect(e: string) {\n        setSearchId(e);\n    }\n\n    return (\n        <div id=\"log-page\" className=\"container\">\n            <PageHeader\n                title=\"Listar Logs\"\n                description=\"Aqui é possível listar os logs cadastrados.\"\n                menu={'log'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form className=\"log-list\">\n                    <fieldset>\n                        <legend>\n                            Listagem\n                        </legend>\n                        <div className=\"list-all\">\n                            <Button\n                                type=\"submit\"\n                                className=\"list-all\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleListAllLogs}\n                                startIcon={<ListOutlinedIcon />}\n                            >\n                                Listar Todos\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n                <form className=\"log-list-id\">\n                    <fieldset>\n                        <div className=\"grid-container-1-list\">\n                            <Input\n                                name=\"id\"\n                                label=\"Informe o id do log\"\n                                value={id}\n                                onChange={(e) => {setId(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"list-by-id-button\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleListLogById}\n                                startIcon={<BrandingWatermarkOutlinedIcon />}\n                            >\n                                Listar por Id\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n                <form className=\"log-list-env-id-level-id\">\n                    <fieldset>\n                        <legend>\n                            Busca avançada\n                        </legend>\n                        <div className=\"grid-container-2-list\">\n                            <Select\n                                name=\"environment\"\n                                label=\"Ambiente\"\n                                value={environmentId}\n                                onChange={(e) => {setEnvironmentId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Desenvolvimento'},\n                                    {value: 2, label: 'Homologação'},\n                                    {value: 3, label: 'Produção'}\n                                ]}\n                            />\n                            <Select\n                                name=\"orderby\"\n                                label=\"Ordenar por\"\n                                value={orderId}\n                                onChange={(e) => {setOrderId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Level'},\n                                    {value: 2, label: 'Frequência'}\n                                ]}\n                            />\n                            <Select\n                                name=\"searchfor\"\n                                label=\"Buscar por\"\n                                value={searchId}\n                                onChange={(e) => {handleSearchTypeSelect(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Level'},\n                                    {value: 2, label: 'Descrição'},\n                                    {value: 3, label: 'Origem'}\n                                ]}\n                            />\n                        </div>\n                        <div className=\"grid-container-3-list\">\n                            <div>\n                                {\n                                    (searchId === '' || searchId === '1' || searchId === '3') ?\n                                        <div>\n                                            {(searchId === '' || searchId === '1') ?\n                                        <Select\n                                            name=\"level-select\"\n                                            label=\"Level\"\n                                            value={levelId}\n                                            options={[\n                                                {value: 1, label: 'Debug'},\n                                                {value: 2, label: 'Warning'},\n                                                {value: 3, label: 'Error'}\n                                            ]}\n                                            onChange={(e) => setLevelId(e.target.value)}\n                                        />  : <Select\n                                                    name=\"layer-select\"\n                                                    label=\"Origem\"\n                                                    value={layerId}\n                                                    options={[\n                                                        {value: 1, label: 'Backend'},\n                                                        {value: 2, label: 'Frontend'},\n                                                        {value: 3, label: 'Mobile'},\n                                                        {value: 4, label: 'Desktop'}\n                                                    ]}\n                                                    onChange={(e) => setLayerId(e.target.value)}\n                                                />}\n                                        </div>\n                                : <Input\n                                    name=\"description\"\n                                    label=\"Descrição\"\n                                    value={description}\n                                    onChange={(e) => {setDescription(e.target.value)}}\n                                />\n                                }\n                            </div>\n                            <Button\n                                type=\"submit\"\n                                className=\"list-advanced-button\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleAdvancedSearch}\n                                startIcon={<ListOutlinedIcon />}\n                            >\n                                Buscar\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <main>\n                <div id=\"list-logs-response\">\n                    {\n                        logs.map((log: Log) => {\n                            return <LogItem key={log.id} log={log}/>;\n                        })}\n                </div>\n            </main>\n            <PageFooter />\n        </div>\n    )\n}\n\nexport default LogList;\n","import React, {FormEvent, useState} from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\nimport {useCookies} from 'react-cookie';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport {useHistory} from 'react-router-dom';\n\nimport './styles.css';\nimport Button from \"@material-ui/core/Button\";\nimport PageFooter from \"../../components/PageFooter\";\n\nfunction LogDelete() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [id, setId] = useState('');\n\n    async function handleDeleteLog(e: FormEvent) {\n        e.preventDefault();\n\n        if (!cookies['token']) {\n            history.push('/user/login');\n            alert('Sessão expirada! Favor fazer o login para prosseguir.')\n        }\n\n        try {\n            const response = await api.delete('log/' + id, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 200) {\n                alert('Registro excluído com sucesso!');\n            }\n            if (response.status === 204) {\n                alert('Registro não encontrado.')\n                return [];\n            }\n\n        } catch(e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if( e.statusCode === 404) {\n                alert('Nenhum registro encontrado.')\n                return [];\n            }else {\n                alert('Ocorreu um erro ao processar sua solicitação. Favor tentar novamente dentro de alguns minutos.');\n            }\n        }\n    }\n    return (\n        <div id=\"log-page\" className=\"container\">\n            <PageHeader\n                title=\"Excluir log\"\n                description=\"Aqui é possível excluir logs.\"\n                menu={'log'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleDeleteLog} className=\"log-delete\">\n                    <fieldset>\n                        <legend>\n                            Exclusão\n                        </legend>\n                        <div className=\"log-delete-action\">\n                            <Input className=\"log-delete-input\" name=\"id\" label=\"Id do log a ser excluído\"\n                                   value={id}\n                                   onChange={(e) => {setId(e.target.value)}}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"delete\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleDeleteLog}\n                                startIcon={<DeleteOutlineOutlinedIcon />}\n                            >\n                                Excluir\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <PageFooter />\n        </div>\n\n    )\n}\n\nexport default LogDelete;","import React, {FormEvent, useState} from \"react\";\nimport {useCookies} from 'react-cookie';\nimport Button from '@material-ui/core/Button';\n\nimport PageHeader from \"../../components/PageHeader\";\nimport Input from \"../../components/Input\";\nimport api from \"../../services/api\";\n\nimport './styles.css';\nimport SaveAltOutlinedIcon from \"@material-ui/icons/SaveAltOutlined\";\nimport {useHistory} from \"react-router-dom\";\nimport PageFooter from \"../../components/PageFooter\";\nimport Textarea from \"../../components/TextArea\";\nimport Select from '../../components/Select';\n\n\nfunction LogUpdate() {\n    const history = useHistory();\n    const [cookies] = useCookies();\n    const token = (cookies['token']) ? `Bearer ${cookies['token'].access_token}` : '';\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [userId, setUserId] = useState('');\n    const [environmentId, setEnvironmentId] = useState('');\n    const [layerId, setLayerId] = useState('');\n    const [levelId, setLevelId] = useState('');\n    const [statusId, setStatusId] = useState('');\n    const [createdAt, setCreatedAt] = useState('');\n\n\n    async function handleUpdateLog(e: FormEvent) {\n        e.preventDefault();\n\n        if (!cookies['token']) {\n            history.push('/user/login');\n            alert('Sessão expirada! Favor fazer o login para prosseguir.')\n        }\n        try {\n            const dateResponse = await api.get('log/' + id, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            setCreatedAt(dateResponse.data.createdAt);\n\n            const response = await api.put('/log', {id, name, description, userId, environmentId, layerId, levelId, statusId, createdAt}, {\n                headers: {\n                    authorization: token\n                }\n            });\n\n            if (response.status === 200 ){\n                alert('Registro alterado com sucesso!');\n            }\n\n            if (response.status === 204) {\n                alert('Registro não encontrado.');\n                return [];\n            }\n        } catch(e) {\n            if (e.statusCode === 401) {\n                history.push('/user/login');\n                alert('Sessão expirada. Favor fazer o login para prosseguir.');\n            } else if( e.statusCode === 244) {\n                alert('Nenhum registro encontrado.')\n                return [];\n            }else {\n                alert('Ocorreu um erro ao processar sua solicitação. Favor tentar novamente dentro de alguns minutos.');\n            }\n        }\n    }\n\n    return (\n        <div id=\"log-page\" className=\"container\">\n            <PageHeader\n                title=\"Alterar log\"\n                description=\"Aqui é possível alterar os logs de erros.\"\n                menu={'log'}\n            />\n            <div id=\"nav-bar\" className=\"nav-bar-container\">\n                <form onSubmit={handleUpdateLog} className=\"log-update\">\n                    <fieldset>\n                        <legend>\n                            Alteração\n                        </legend>\n                        <Input className=\"update-id\" name=\"id\" label=\"Id\"\n                               value={id}\n                               onChange={(e) => {setId(e.target.value)}}\n                        />\n                        <Input className=\"update-name\" name=\"name\" label=\"Título\"\n                               value={name}\n                               onChange={(e) => {setName(e.target.value)}}\n                        />\n                        <Textarea\n                            name=\"description\"\n                            label=\"Descrição\"\n                            value={description}\n                            onChange={(e) => {setDescription(e.target.value)}}\n                        />\n                        <div className=\"grid-container-1-update\">\n                            <Input className=\"update-user-id\" name=\"userId\" label=\"User Id\"\n                                   value={userId}\n                                   onChange={(e) => {setUserId(e.target.value)}}\n                            />\n                            <Select\n                                name=\"environment\"\n                                label=\"Ambiente\"\n                                value={environmentId}\n                                onChange={(e) => {setEnvironmentId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Desenvolvimento'},\n                                    {value: 2, label: 'Homologação'},\n                                    {value: 3, label: 'Produção'}\n                                ]}\n                            />\n                            <Select\n                                name=\"layer\"\n                                label=\"Camada\"\n                                value={layerId}\n                                onChange={(e) => {setLayerId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Backend'},\n                                    {value: 2, label: 'Frontend'},\n                                    {value: 3, label: 'Mobile'},\n                                    {value: 4, label: 'Desktop'}\n                                ]}\n                            />\n                        </div>\n                        <div className=\"grid-container-2-update\">\n                            <Select\n                                name=\"level\"\n                                label=\"Level\"\n                                value={levelId}\n                                onChange={(e) => {setLevelId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Debug'},\n                                    {value: 2, label: 'Warning'},\n                                    {value: 3, label: 'Error'}\n                                ]}\n                            />\n                            <Select\n                                name=\"status\"\n                                label=\"Status\"\n                                value={statusId}\n                                onChange={(e) => {setStatusId(e.target.value)}}\n                                options={[\n                                    {value: 1, label: 'Arquivado'},\n                                    {value: 2, label: 'Pendente'},\n                                    {value: 3, label: 'Ignorado'}\n                                ]}\n                            />\n                            <Button\n                                type=\"submit\"\n                                className=\"update-log-button\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleUpdateLog}\n                                startIcon={<SaveAltOutlinedIcon />}\n                            >\n                                Gravar\n                            </Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            <PageFooter />\n        </div>\n\n    )\n}\n\nexport default LogUpdate;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Landing from './pages/Landing';\nimport Login from './pages/Login';\nimport UserDelete from \"./pages/UserDelete\";\nimport UserCreate from \"./pages/UserCreate\";\nimport UserUpdate from \"./pages/UserUpdate\";\nimport UserList from \"./pages/UserList\";\nimport UserRegistry from \"./pages/UserRegistry\";\nimport InnerMain from \"./pages/InnerMain\";\nimport LogCreate from \"./pages/LogCreate\";\nimport LogList from \"./pages/LogList\";\nimport LogDelete from \"./pages/LogDelete\";\nimport LogUpdate from \"./pages/LogUpdate\";\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Landing} />\n                <Route path='/main' component={InnerMain} />\n                <Route path='/user/login' component={Login} />\n                <Route path='/user/registry' component={UserRegistry} />\n                <Route path='/user/list' component={UserList} />\n                <Route path='/user/create' component={UserCreate} />\n                <Route path='/user/update' component={UserUpdate} />\n                <Route path='/user/delete' component={UserDelete} />\n                <Route path='/log/list' component={LogList} />\n                <Route path='/log/create' component={LogCreate} />\n                <Route path='/log/update' component={LogUpdate} />\n                <Route path='/log/delete' component={LogDelete} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport './assets/styles/global.css';\nimport Routes from \"./routes\";\n\nconst App = () => {\n    return (\n        <Routes />\n    );\n}\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.8ff1c14c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-small.15e963db.png\";"],"sourceRoot":""}